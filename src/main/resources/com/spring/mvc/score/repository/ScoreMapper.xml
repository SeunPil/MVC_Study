<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--  namespace속성에는 사용 할 인터페이스에 풀 경로를 적는다. (패키지 포함 경로)  -->
<mapper namespace="com.spring.mvc.score.repository.ScoreMapper">

    <!-- 인터페이스의 추상메서드들의 SQL문장을 적음  -->
    <!--    #{} 안에는 필드 명을 적어준다.-->
    <!--    id는 메서드 이름을 적어준다.-->


    <insert id="save">
        INSERT INTO score
        VALUES
        (seq_score.nextval,
        #{name},
        #{kor},
        #{eng},
        #{math},
        #{total},
        #{average})
    </insert>

    <delete id="remove">
        DELETE
        FROM score
        WHERE stu_num = #{stuNum} <!-- SQL 절에서는 컬럼명, #{}에서는 자바 변수(필드)명 -->
    </delete>
    <!--select문은 조회 값을 리턴 받아야함-->

    <!--
      SELECT문 처리는 처리결과를 자바 클래스 객체에
      매핑하는 추가 작업이 필요합니다.

      resultMap: 자바의 필드명과 테이블의 컬럼명이 다른 경우를
      대비하여 매칭하는 작업을 수행합니다.
      -->
    <!--  총 게시물 수 조회  -->
    <select id="getTotalCount" resultType="int">
        SELECT COUNT(*)
        FROM board
    </select>


    <!--    id에는 맵의 이름을 지어주고 type엔 도메인 클래스의 풀 경로를 작성해준다.-->
    <resultMap id="scoreMap" type="com.spring.mvc.score.domain.Score">
        <!-- 필드 명과 컬럼 명이 다른 것들만 기술 -->
        <!-- property에는 자바 필드명, column에는 DB 컬럼명 -->
        <result property="stuNum" column="stu_num" />
        <result property="name" column="stu_name" />
    </resultMap>

    <!-- 전체 조회 -->
    <select id="findAll" resultMap="scoreMap">
        SELECT * FROM score
    </select>
    <!-- 특정 유저 조회 -->
    <select id="findOne" resultMap="scoreMap">
        SELECT * FROM score
        WHERE stu_num = #{stuNum}
    </select>


</mapper>